@model IEnumerable<ExamTable.Models.section>

@{
    ViewBag.Title = "Section";
}

<h2>Section</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.section_number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.student_enrolled)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.course.code)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.course.title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.course.hours)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.is_deleted)
        </th>
        <th>
            Faculty Name
        </th>
        <th>
            @Html.DisplayNameFor(model => model.class_weekday)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.class_start_time)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.room.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.program.title)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.section_number)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.student_enrolled)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.course.code)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.course.title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.course.hours)
        </td>
        <td>
            @{ string temp = (bool)item.is_deleted ? "Not Current" : "Current";}
            @temp
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.faculty.first_name) @Html.DisplayFor(modelItem => item.faculty.last_name)
        </td>
        <td>
            @{ int? tempW = item.class_weekday;}
            @if (tempW != null)
        {
            switch (tempW)
            {
                case 0:
                    <span>Monday</span>;
                break;
            case 1:
                <span>Tuesday</span>;
            break;
        case 2:
            <span>Wednesday</span>;
        break;
    case 3:
        <span>Thursday</span>;
    break;
case 4:
    <span>Friday</span>;
break;
}
}


        </td>
        <td>

            @{ int? tempS = item.class_start_time;}
            @if (tempS != null)
        {
            double? course_length = item.course.class_length;
            if (course_length != null)
            {
                int tempD = (int)(course_length * 10);
                if (tempD % 2 == 0)
                {
                    int endTime = (int)tempS + (int)course_length;
                <span>
                    @Html.DisplayFor(modelItem => item.class_start_time):00 - @endTime:00
                </span>
        }
        else
        {
            int endTime = (int)tempS + (int)(course_length - 0.5);
            <span>
                @Html.DisplayFor(modelItem => item.class_start_time):00 - @endTime:30
            </span>
    }
}

}
            </td>



            <td>
                @Html.DisplayFor(modelItem => item.room.name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.program.title)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                @Html.ActionLink("Details", "Details", new { id = item.id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.id })
            </td>
        </tr>
}

</table>
